name: Deploy to Kubernetes

on:
  push:
    branches:
      - main

jobs:
  build-docker:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Log in to Docker Hub
      run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

    - name: Build and push Docker image
      run: |
        docker build -t teknikhub/nodejs:latest .
        docker push teknikhub/nodejs:latest

  # vpn:
  #   name: vpn install 
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: vpn
  #       uses: actions/checkout@v4
  #     - name: install vpn
  #       run: |
  #         sudo apt-get update
  #         sudo curl -s https://install.zerotier.com | sudo bash
  #         sudo systemctl start zerotier-one
  #         sudo zerotier-cli join "${{ secrets.VPN_NETWORK }}"
  #     - name: Wait for VPN to establish connection
  #       run: |
  #         echo "Waiting for VPN connection to be fully established..."
  #         sleep 30  # Menunggu selama 30 detik sebelum melanjutkan ke deployment
  #     - name: Ping IP to check connection
  #       run: |
  #         echo "Pinging IP for 5 seconds..."
  #         ping -c 30 "${{ secrets.VPN_IP }}"
  

  deploy:
    runs-on: ubuntu-latest
    needs: build-docker

    steps:
    - name: Add SSH key
      uses: webfactory/ssh-agent@v0.7.0
      with:
        ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

    - name: Deploy to Kubernetes via SSH and Git clone
      run: |
        ssh -o StrictHostKeyChecking=no ubuntu@ec2-34-234-234-179.compute-1.amazonaws.com "
         if [ -d \"tugas-git-action\" ]; then 
            echo 'Folder exists. Deleting...'; 
            rm -rf tugas-git-action; 
        fi && \
        git clone https://github.com/teknik-github/tugas-git-action.git && \
        sudo kubectl delete -k tugas-git-action/deployment/. && \
        cd tugas-git-action/deployment && \
        sudo kubectl apply -k .
        "